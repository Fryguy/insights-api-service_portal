swagger: '2.0'
info:
  description: This is a API to fetch and order catalog items from different cloud sources 
  version: 1.0.0
  title: Insights HSDM API
  # put the contact info for your development or API team
  contact:
    email: you@your-company.com

  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
securityDefinitions:
  UserSecurity:
    type: basic
security:
  - UserSecurity: [] 
  
# tags are used for organizing operations
tags:
- name: admins
  description: Secured Admin-only calls
- name: users
  description: Operations available to regular authenticated users

paths:
  /providers:
    get:
      tags:
      - users
      summary: Temporary API to list provider
      operationId: listProviders
      description: |
        Returns an array of provider objects
      produces: 
      - application/json
      consumes: 
      - application/json
      responses:
        200:
          description: Provider Info
          schema:
            type: array
            items:
              $ref: '#/definitions/Provider'
        400:
          description: bad input parameter
    post:
      tags:
      - users
      summary: Temporary API to add a new provider
      operationId: addProvider
      description: |
        Returns the added provider object
      produces: 
      - application/json
      consumes: 
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        schema:
            $ref: '#/definitions/Provider'
        
      responses:
        200:
          description: Provider Info
          schema:
            type: object
            items:
              $ref: '#/definitions/Provider'
        400:
          description: bad input parameter
  
  /catalog_items:
    get:
      tags:
      - users
      summary: fetches catalog items from all providers
      operationId: catalogItems
      description: |
        Fetch catalog item from all defined providers
      produces:
      - application/json
      responses:
        200:
          description: all known catalog items
          schema:
            type: array
            items:
              $ref: '#/definitions/CatalogItem'
        
  /providers/{provider_id}/catalog_items:
    get:
      tags:
      - users
      summary: Fetch all or a specific catalog item from a specific provider
      operationId: fetchCatalogItemWithProvider
      description: |
        By passing in the provider id you can fetch all the catalog items in the provider. You can limit to a specific catalog item by passing its id
      produces:
      - application/json
      parameters:
        - $ref: '#/parameters/ProviderID'
        - $ref: '#/parameters/OptionalCatalogID'
      responses:
        200:
          description: search results matching criteria
          schema:
            type: array
            items:
              $ref: '#/definitions/CatalogItem'
        400:
          description: bad input parameter
  /providers/{provider_id}/catalog_items/{catalog_id}:
    get:
      tags:
      - users
      summary: Fetches a specific catalog item for a provider  
      operationId: fetchCatalogItemWithProviderAndCatalogID
      description: |
        Fetch a catalog item by its ID and provider ID
      produces:
      - application/json
      parameters:
        - $ref: '#/parameters/ProviderID'
        - $ref: '#/parameters/CatalogID'
      responses:
        200:
          description: search results matching criteria
          schema:
            type: array
            items:
              $ref: '#/definitions/CatalogItem'
        400:
          description: bad input parameter        
  /providers/{provider_id}/catalog_items/{catalog_id}/parameters:
    get:
      tags:
      - users
      summary: Fetches catalog parameters, it needs the provider id, the catalog_id
      operationId: catalogParameters
      description: |
        Return a JSON object with the parameters needed for a catalogItem
      produces:
      - application/json
      parameters:
        - $ref: '#/parameters/ProviderID'
        - $ref: '#/parameters/CatalogID'
        
      responses:
        200:
          description: Parameters for the given catalog item
          schema:
            type: array
            items:
              $ref: '#/definitions/CatalogParameter'
        400:
          description: bad input parameter
        404:
          description: catalog item doesn't exist
  /orders:
    get:
      tags:
      - users
      summary: Get a list of orders
      operationId: listOrders
      description: |
        Get a list of orders associated with the logged in user.
      produces:
       - application/json
      responses:
        200:
          description: Returns an array of Order objects
          schema:
            type: array
            items:
              $ref: '#/definitions/Order'
    post:
      tags:
      - users
      summary: Create a new order
      operationId: newOrder
      description: |
        Create a new order.
      produces:
       - application/json
      responses:
        200:
          description: Returns a newly created order object
          schema:
            $ref: '#/definitions/Order'
            
                    
  /orders/{order_id}/items:
    get:
      tags:
      - users
      summary: Get a list of items in a given order
      operationId: listOrderItems
      description: |
        Get a list of items associated with an order.
      produces:
       - application/json
      parameters:
        - $ref: '#/parameters/OrderID'
      responses:
        200:
          description: Returns an array of OrderIem objects
          schema:
            type: array
            items:
              $ref: '#/definitions/OrderItem'
    post:    
      tags:
      - users
      summary: Add a Catalog to the Order in Pending State
      operationId: addToOrder
      description: |
        Add a catalog item to the order in Pending State
      produces: 
      - application/json
      consumes: 
      - application/json
      parameters:
        - $ref: '#/parameters/OrderID'
      
        - in: body
          name: item
          required: true
          schema:
            $ref: '#/definitions/OrderItem'
          
      responses:
        200:
          description: Successfully added an item to order
        400:
          description: bad input parameter
        404:
          description: cannot add to a order which has already been ordered.
          
  /orders/{order_id}/items/{order_item_id}:
    get:
      tags:
      - users
      summary: Get an individual item from a given order
      operationId: listOrderItem
      description: |
        Get an item associated with an order.
      produces:
       - application/json
      parameters:
        - $ref: '#/parameters/OrderID'
        - $ref: '#/parameters/OrderItemID'
          
      responses:
        200:
          description: Returns a single OrderIem object
          schema:
            $ref: '#/definitions/OrderItem'
            
  /orders/{order_id}:
    post:
      tags:
      - users
      summary: Submit the given order
      operationId: submitOrder
      description: |
        Returns an updated order object
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/OrderID'
      responses:
        200:
          description: Updated Order object
          schema:
            $ref: '#/definitions/Order'
        400:
          description: Order is empty, nothing to order
          
  /order_items/{order_item_id}/progress_messages:
    get:
      tags:
      - users
      summary: Get a list of progress messages in an item
      operationId: listProgressMessages
      description: |
        Get a list of progress messages associated with an order item. As the item is being processed the provider can update the progress messages
      produces:
       - application/json
      parameters:
        - $ref: '#/parameters/OrderItemID'
      responses:
        200:
          description: Returns an array of ProgressMessage objects
          schema:
            type: array
            items:
              $ref: '#/definitions/ProgressMessage'  

# define reusable parameters:
parameters:
  CatalogID:
    name: catalog_id
    in: path
    description: The Catalog ID
    required: true
    type: string
    format: uuid
  ProviderID:
    name: provider_id
    in: path
    description: The Provider ID
    required: true
    type: string
    format: uuid
  OrderID:
    name: order_id
    in: path
    description: The Order ID
    required: true
    type: string
    format: uuid
  OrderItemID:
    name: order_item_id
    in: path
    description: The Order Item ID
    required: true
    type: string
    format: uuid  
  OptionalCatalogID:
    name: catalog_id
    in: query
    description: The Catalog ID
    type: string
    format: uuid
  OptionalProviderID:
    name: provider_id
    in: query
    description: The Provider ID
    type: integer  
    
# define reusable definitions  
definitions:
  CatalogItem:
    type: object
    required:
    - name
    - description
    properties:
      provider_id:
        type: string
        format: uuid
        description:  ID of the provider object
        title: Provider ID
        readOnly: true
      catalog_id:
        type: string
        format: uuid
        title: Catalog ID
        description: Stores the Catalog ID from the provider
        readOnly: true
      name:
        type: string
        example: Sample Catalog Item
      description:
        type: string
        example: Sample Catalog Item collected from your cloud provider
      imageUrl:
        type: string
        format: url
        example: http://www.example.com/1.jpg
  CatalogParameter:
    type: object
    properties:
      type:
        type: string
        title: Type of Parameter
      title:
        type: string
        title: Title of Parameter
      name:
        type: string
        title: Parameter Name
      description:
        type: string
        title: Parameter Description
      default:
        type: string
        title: Default String Value
      pattern:
        type: string
        title: Regexp pattern
      example:
        type: string
        title: Example of sample data
      required:
        type: boolean
        title: Mandatory Parameter
      format:
        type: string
        title: Format for the data type
        enum: ['password', 'url', 'uuid'] 
      enum:
        type: array
        items: 
          type: string
          
  ParameterValue:
    type: object
    required:
    - name
    - value
    properties:
      name:
        type: string
        title: Name of Parameter
      value:
        type: string
        title: Value of Parameter
      type:
        type: string
        title: Type of Value
      format:
        type: string
        title: Format of Value    
  Order:
    type: object
    properties:
      id:
        type: string
        format: uuid
        readOnly: true
      user_id:
        type: string
        format: uuid
        readOnly: true
      state:
        type: string
        enum: [Created, Ordered, Failed, Completed]
        title: State
        description: Current State of the order
      created_at:
        type: string
        format: date-time
        title: Created at
      ordered_at:
        type: string
        format: date-time
        title: Ordered at
      completed_at:
        type: string
        format: date-time
        title: Completed at
      order_items:
        type: array
        items:
          $ref: '#/definitions/OrderItem'   
      
  OrderItem:
    type: object
    
    required:
    - parameters
    - count
    properties:
      id:
        type: string
        format: uuid
        readOnly: true
      count:
        type: integer
        default: 1
        title: Item Count
      parameters:
        type: array
        items:
          $ref: '#/definitions/ParameterValue'
      catalog_id:
        type: string
        format: uuid
        title: Catalog ID
        description: Stores the Catalog ID from the provider
        readOnly: true
      provider_id:
        type: string
        format: uuid
        description:  ID of the provider object
        title: Provider ID
        readOnly: true
      order_id:
        type: string
        format: uuid
        description:  ID of the order object
        title: Order ID
        readOnly: true
      state:
        type: string
        enum: [Created, Ordered, Failed, Completed]
        title: State
        description: Current State of this order item
      created_at:
        type: string
        format: date-time
        title: Created at
      ordered_at:
        type: string
        format: date-time
        title: Ordered at
      completed_at:
        type: string
        format: date-time
        title: Completed at
      updated_at:
        type: string
        format: date-time
        title: Completed at
      external_ref:
        type: string
        description:  An external reference from the provider that can be used to track the progress of the order item
        title: External Reference
        readOnly: true
      
  ProgressMessage:
    type: object
    properties:
      received_at:
        type: string
        format: date-time
        title: Message Received At
        readOnly: true
      level:
        type: string
        readOnly: true
        enum: ['info', 'error', 'warning', 'debug']
      message:
        type: string
        example: This is a sample message
        title: Message
        readOnly: true
      order_item_id:
        type: string
        title: Order Item ID
        readOnly: true
        format: uuid
        
  Provider:
    type: object
    required:
    - name
    - url
    - token
    
    properties:
      id:
        type: string
        readOnly: true
        format: uuid
      name:
        type: string
        example: Sample Provider
        title: Name
      description:
        type: string
        example: This is a sample description for a provider
        title: Description
      url:
        type: string
        format: url
        example: The REST API end point for the provider
        title: Provider URL
      user:
        type: string
        title: User
        description: The user used to connect to the provider
      password:
        type: string
        title: Password
        description: The password used to connect to the provider
      token:
        type: string
        title: Token
        description: The token used to connect to the provider
      verify_ssl:
        type: boolean
        default: true
        title: Verify Server Certificate
        description: Verify the servers certificate, you can disable it for servers with self signed certificates.
# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
# basePath: /HSDM/1.0.0
schemes:
 - https
 - http
# Added by API Auto Mocking Plugin
# basePath: /HSDM/1.0.0
# Added by API Auto Mocking Plugin
# basePath: /HSDM/1.0.0
# Added by API Auto Mocking Plugin
basePath: /mkanoor/InsightsCatalog/1.0.0